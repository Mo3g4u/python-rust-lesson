fn main() {
    let g1 = String::from("過ちを見過ごす人は美しい");
    show_message(&g1); // 参照を渡す
    println!("{}", g1); // ok 所有権は移動していない
}

fn show_message(message: &String) {
    println!("{}", message);
}

/*
Rustでは所有権を一時的に貸し出す「借用」という仕組みを用意しています。
値を借用するには。値の参照を表す「&」を指定します。
言い換えると関数の引数に「参照」を指定することを「借用」とよぶ。

値の参照を使うことは、値の所有権を一時的に貸し出すだけの「借用」とみなされる。
*/
